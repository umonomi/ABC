#include <iostream>
#include <windows.h>

using namespace std;

const int MAX_ROWS = 100; // Максимальное количество строк
const int MAX_COLS = 100; // Максимальное количество столбцов

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int rows = 0, cols = 0;

    // Ввод размеров массива
    cout << "Enter the number of rows (max " << MAX_ROWS << "): ";
    cin >> rows;
    cout << "Enter the number of columns (max " << MAX_COLS << "): ";
    cin >> cols;

    // Проверка на превышение максимальных размеров
    if (rows > MAX_ROWS || cols > MAX_COLS) {
        cout << "Exceeded maximum array size.\n";
        return 1;
    }

    // Создание двумерного массива
    int arr[MAX_ROWS][MAX_COLS];

    // Ввод элементов массива
    cout << "Enter the elements of the array:\n";
    for (int i = 0; i < rows; i++)
    {
        for (int j = 0; j < cols; j++)
        {
            cout << "Element [" << i + 1 << "][" << j + 1 << "]: ";
            cin >> arr[i][j];
        }
    }

    int choice = 0;
    while (true)
    {
        cout << "\nChoose a task:\n";
        cout << "1. Check if there is a row with only odd elements\n";
        cout << "2. Check if there is a row with elements divisible by a or b\n";
        cout << "3. Print every second element of the array (2nd, 4th, etc.)\n";
        cout << "0. Exit\n";
        cout << "Your choice: ";
        cin >> choice;

        if (choice == 1)
        {
            // Проверка на строку с нечётными элементами
            bool hasOddRow = false;
            for (int i = 0; i < rows; i++)
            {
                bool allOdd = true;
                for (int j = 0; j < cols; j++)
                {
                    if (arr[i][j] % 2 == 0)
                    {
                        allOdd = false;
                        break;
                    }
                }
                if (allOdd)
                {
                    hasOddRow = true;
                    cout << "Row " << i + 1 << " consists of only odd elements.\n";
                    break;
                }
            }
            if (!hasOddRow)
            {
                cout << "There is no row with only odd elements.\n";
            }
        }
        else if (choice == 2)
        {
            // Проверка на строку с элементами, кратными a или b
            int a, b;
            cout << "Enter number a: ";
            cin >> a;
            cout << "Enter number b: ";
            cin >> b;

            bool hasDivisibleRow = false;
            for (int i = 0; i < rows; i++)
            {
                bool allDivisible = true;
                for (int j = 0; j < cols; j++)
                {
                    if (arr[i][j] % a != 0 && arr[i][j] % b != 0)
                    {
                        allDivisible = false;
                        break;
                    }
                }
                if (allDivisible)
                {
                    hasDivisibleRow = true;
                    cout << "Row " << i + 1 << " consists of elements divisible by " << a << " or " << b << ".\n";
                    break;
                }
            }
            if (!hasDivisibleRow)
            {
                cout << "There is no row with elements divisible by " << a << " or " << b << ".\n";
            }
        }
        else if (choice == 3)
        {
            // Печать каждого второго элемента массива
            cout << "Every second element of the array (2nd, 4th, etc.):\n";
            for (int i = 0; i < rows; i++)
            {
                for (int j = 1; j < cols; j += 2) // Начинаем с индекса 1 и шагаем через 2
                {
                    cout << arr[i][j] << " ";
                }
                cout << "\n";
            }
        }
        else if (choice == 0)
        {
            break;

        }
        else
        {
            cout << "Invalid choice. Please try again.\n";
        }

        // Ожидание ввода для продолжения
        cin.get();
        cin.get();
    }

    return 0;
}
